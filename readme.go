package main

import (
	"bufio"
	"fmt"
	"github.com/codegangsta/cli"
	"log"
	"os"
	"strings"
)

type Readme struct {
	prjName      string
	prjDesc      string
	authorName   string
	authorEmail  string
	prjLicense   string
	hasSetupInst bool
	hasDevInst   bool
	hasTestInst  bool
}

func (r *Readme) Normalize() {
	r.prjName = strings.TrimSpace(r.prjName)
	r.prjDesc = strings.TrimSpace(r.prjDesc)
	r.authorName = strings.TrimSpace(r.authorName)
	r.authorEmail = strings.TrimSpace(r.authorEmail)
	r.prjLicense = strings.TrimSpace(r.prjLicense)
}

func input(readme *Readme, c *cli.Context) {
	in := bufio.NewReader(os.Stdin)
	fmt.Println("Project's name:")
	readme.prjName, _ = in.ReadString('\n')
	fmt.Println("Project's short description:")
	readme.prjDesc, _ = in.ReadString('\n')
	fmt.Println("Author's name:")
	readme.authorName, _ = in.ReadString('\n')
	fmt.Println("Author's e-mail:")
	readme.authorEmail, _ = in.ReadString('\n')
	fmt.Println("License's name:")
	readme.prjLicense, _ = in.ReadString('\n')
	readme.hasSetupInst = !c.Bool("ignore-setup")
	readme.hasDevInst = !c.Bool("ignore-dev")
	readme.hasTestInst = !c.Bool("ignore-test")
	readme.Normalize()
}

func output(readme *Readme) {
	file, err := os.Create("README.md")
	if err != nil {
		log.Fatal(err)
	}
	out := bufio.NewWriter(file)
	out.WriteString("# " + readme.prjName + "\n\n")
	out.WriteString(readme.prjDesc + "\n\n")
	out.WriteString("## About\n\nWrite here about what is your project...\n\n")
	if readme.hasSetupInst {
    out.WriteString("## Instalation\n\nWrite here about how install your project  \n`write here some code if is necessary!`\n\n")
  }
	if readme.hasDevInst {
    out.WriteString("## Development\n\nWrite here about how setup your project environment for development purposes  \n`write here some code if is necessary!`\n\n")
  }
	if readme.hasTestInst {
    out.WriteString("## Running test\n\nWrite here about how execute test tasks into your project  \n`write here some code if is necessary!`\n\n")
  }
	out.WriteString("## Author\n\n")
	out.WriteString(readme.authorName + " <" + readme.authorEmail + ">  \n")
	out.WriteString("Licensed by " + readme.prjLicense + "  \n")
	out.WriteString("Documentation generated by [Readme Generator](https://github.com/caio-ribeiro-pereira/go-readme-cli)\n")
	fmt.Println("\nThe README.md file was generated!")
	defer out.Flush()
}

func main() {
	app := cli.NewApp()
	app.Name = "readme"
	app.Version = "0.0.3"
	app.Usage = "Generates a minimal README.md for your current project."
	app.Flags = []cli.Flag{
		cli.BoolFlag{
			Name:  "ignore-setup, igs",
			Usage: "ignore setup's instructions",
		},
		cli.BoolFlag{
			Name:  "ignore-dev, igd",
			Usage: "ignore development's instructions",
		},
		cli.BoolFlag{
			Name:  "ignore-test, igt",
			Usage: "ignore test's instructions",
		},
	}
	app.Action = func(c *cli.Context) {
		readme := Readme{}
		input(&readme, c)
		output(&readme)
	}
	app.Run(os.Args)
}
